# You CANNOT edit this file without direct permission from the author.
# You can redistribute this file without any changes.

# meta developer: @Toxano_Modules
# scope: @Toxano
# scope: @Toxano_Modulesimport 

import asyncio
import logging
from telethon.tl.functions.account import UpdateProfileRequest
from .. import loader, utils
from telethon import TelegramClient

logger = logging.getLogger(__name__)

@loader.tds
class TimeInNickMod(loader.Module):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–∏–∫–Ω–µ–π–º–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤"""
    
    strings = {
        "name": "–í—Ä–µ–º—è–í–ù–∏–∫–µ",
        "time_enabled": "‚è∞ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∏–∫–µ –≤–∫–ª—é—á–µ–Ω–æ",
        "time_disabled": "‚è∞ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∏–∫–µ –≤—ã–∫–ª—é—á–µ–Ω–æ", 
        "invalid_delay": "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1-60 –º–∏–Ω—É—Ç)",
        "night_mode_enabled": "üåô –ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω",
        "night_mode_disabled": "üåÖ –ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω",
        "cfg_timezone": "–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (MSK/UTC/EST/CST/PST/etc)",
        "cfg_update": "–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞ (1-60 –º–∏–Ω—É—Ç)",
        "cfg_night": "–û—Ç–∫–ª—é—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è (00:00-06:00)",
        "cfg_night_start": "–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ (–ß–ß:–ú–ú)",
        "cfg_night_end": "–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ (–ß–ß:–ú–ú)", 
        "cfg_format": "–§–æ—Ä–º–∞—Ç –Ω–∏–∫–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {nickname}, {time}"
    }

    strings_ru = {
        "name": "–í—Ä–µ–º—è–í–ù–∏–∫–µ",
        "_cmd_doc_updatenick": "–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∏–∫–Ω–µ–π–º–µ",
        "_cls_doc": "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–∏–∫–Ω–µ–π–º–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤"
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            "TIMEZONE", "MSK", lambda: self.strings("cfg_timezone"),
            "UPDATE_DELAY", 1, lambda: self.strings("cfg_update"),
            "NIGHT_MODE", True, lambda: self.strings("cfg_night"),
            "NIGHT_START", "00:00", lambda: self.strings("cfg_night_start"),
            "NIGHT_END", "06:00", lambda: self.strings("cfg_night_end"),
            "TIME_FORMAT", "{nickname} | {time}", lambda: self.strings("cfg_format")
        )
        self.active = False
        self.original_nick = None
        self.task = None

    async def client_ready(self, client: TelegramClient, db):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è"""
        self._client = client

    async def updatenickcmd(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∏–∫–Ω–µ–π–º–µ"""
        if self.active:
            self.active = False
            if self.task:
                self.task.cancel()
            if self.original_nick:
                try:
                    await self._client(UpdateProfileRequest(
                        first_name=self.original_nick
                    ))
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∏–∫–∞: {e}")
            await utils.answer(message, self.strings["time_disabled"])
            return
        
        self.active = True
        me = await self._client.get_me()
        self.original_nick = me.first_name
        await utils.answer(message, self.strings["time_enabled"])
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç–∞—Å–∫–µ
        self.task = asyncio.create_task(self.update_nickname())

    async def update_nickname(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∏–∫–Ω–µ–π–º —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º"""
        while self.active:
            try:
                now = datetime.datetime.now()
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
                if self.config["NIGHT_MODE"]:
                    night_start = datetime.datetime.strptime(self.config["NIGHT_START"], "%H:%M").time()
                    night_end = datetime.datetime.strptime(self.config["NIGHT_END"], "%H:%M").time() 
                    current_time = now.time()
                    
                    if night_start <= current_time <= night_end:
                        await asyncio.sleep(60)
                        continue

                # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —á–∞—Å–æ–≤–æ–º—É –ø–æ—è—Å—É
                if self.config["TIMEZONE"] == "MSK":
                    time_str = (now + datetime.timedelta(hours=3)).strftime("%H:%M")
                elif self.config["TIMEZONE"] == "EST":
                    time_str = (now - datetime.timedelta(hours=5)).strftime("%H:%M")
                else:
                    time_str = now.strftime("%H:%M")

                new_nick = self.config["TIME_FORMAT"].format(
                    nickname=self.original_nick,
                    time=time_str
                )

                await self._client(UpdateProfileRequest(
                    first_name=new_nick
                ))

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∏–∫–∞: {e}")

            # –ñ–¥–µ–º 1 –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
            await asyncio.sleep(60)

    async def on_unload(self):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è"""
        if self.task:
            self.task.cancel()
